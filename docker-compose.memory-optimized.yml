version: '3.8'

services:
  mysql:
    image: mariadb:10.4.32
    container_name: mysql
    restart: unless-stopped
    env_file:
      - .env
    environment:
      # Root password
      MYSQL_ROOT_PASSWORD: "${DATABASE_PASSWORD:-1234}_ROOT"
      # Default database to create
      MYSQL_DATABASE: "${DATABASE_NAME:-crm_system}"
      # Default user to create (MariaDB will create this automatically)
      MYSQL_USER: "${DATABASE_USER:-crm_user}"
      MYSQL_PASSWORD: "${DATABASE_PASSWORD:-1234}"
    volumes:
      - mysql_data:/var/lib/mysql
      # Init scripts will run in alphabetical order
      - ./database/init.sql:/docker-entrypoint-initdb.d/01-init.sql:ro
      - ./database/crm_system.sql:/docker-entrypoint-initdb.d/02-crm_system.sql:ro
    ports:
      - "3306:3306"
    command: --innodb-buffer-pool-size=128M --max-connections=50
    healthcheck:
      test: ["CMD", "mariadb-admin", "ping", "-h", "localhost", "-u", "root", "-p${DATABASE_PASSWORD:-1234}_ROOT"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
    deploy:
      resources:
        limits:
          memory: 512M
        reservations:
          memory: 256M
    networks:
      - crm_network

  # Rabin Voice Assistant - باید اول بیاید بالا
  rabin-voice:
    build:
      context: ./صدای رابین
      dockerfile: Dockerfile
      args:
        - NODE_ENV=production
    container_name: rabin-voice
    restart: unless-stopped
    env_file:
      - .env
    environment:
      NODE_ENV: production
      OPENROUTER_API_KEY: ${RABIN_VOICE_OPENROUTER_API_KEY}
      OPENROUTER_MODEL: ${RABIN_VOICE_OPENROUTER_MODEL:-anthropic/claude-3-haiku}
      TTS_API_URL: ${RABIN_VOICE_TTS_API_URL:-https://api.ahmadreza-avandi.ir/text-to-speech}
      PORT: 3001
      LOG_LEVEL: ${RABIN_VOICE_LOG_LEVEL:-INFO}
      NODE_OPTIONS: --max-old-space-size=384
    volumes:
      # Mount logs for debugging
      - ./صدای رابین/logs:/app/logs:rw
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://127.0.0.1:3001/rabin-voice/"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    deploy:
      resources:
        limits:
          memory: 384M
        reservations:
          memory: 192M
    networks:
      - crm_network

  nextjs:
    build:
      context: .
      dockerfile: Dockerfile
      args:
        - NODE_ENV=production
    container_name: nextjs
    restart: unless-stopped
    env_file:
      - .env
    environment:
      NODE_ENV: production
      PORT: 3000
      DATABASE_HOST: mysql
      DATABASE_USER: ${DATABASE_USER}
      DATABASE_PASSWORD: ${DATABASE_PASSWORD}
      DATABASE_NAME: ${DATABASE_NAME}
      DATABASE_URL: ${DATABASE_URL}
      NEXTAUTH_SECRET: ${NEXTAUTH_SECRET}
      NEXTAUTH_URL: ${NEXTAUTH_URL}
      NODE_OPTIONS: --max-old-space-size=512
    volumes:
      # Mount uploads directory for file storage with proper permissions
      - ./uploads:/app/uploads:rw
      - ./public/uploads:/app/public/uploads:rw
      # Mount logs for debugging
      - ./logs:/app/logs:rw
    depends_on:
      - mysql
      - rabin-voice
    deploy:
      resources:
        limits:
          memory: 1G
        reservations:
          memory: 512M
    networks:
      - crm_network

  # phpMyAdmin - Hidden and Secured
  phpmyadmin:
    image: phpmyadmin/phpmyadmin:5.2.2
    container_name: crm_phpmyadmin
    env_file:
      - .env
    environment:
      PMA_HOST: mysql
      PMA_PORT: 3306
      # Allow login with any valid MySQL user (set to 1 for flexibility)
      PMA_ARBITRARY: 1
      # Pre-fill login form with default user (users can still change it)
      PMA_USER: "${DATABASE_USER:-crm_user}"
      PMA_PASSWORD: "${DATABASE_PASSWORD:-1234}"
      # Root password for phpMyAdmin to connect
      MYSQL_ROOT_PASSWORD: "${DATABASE_PASSWORD:-1234}_ROOT"
      PMA_ABSOLUTE_URI: "https://crm.robintejarat.com/secure-db-admin-panel-x7k9m2/"
      # Hide phpMyAdmin version for security
      HIDE_PHP_VERSION: 1
    restart: unless-stopped
    expose:
      - "80"
    depends_on:
      mysql:
        condition: service_healthy
    deploy:
      resources:
        limits:
          memory: 256M
        reservations:
          memory: 128M
    networks:
      - crm_network

  nginx:
    image: nginx:alpine
    container_name: nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf:ro
      - /etc/letsencrypt:/etc/letsencrypt:ro
      - /var/www/certbot:/var/www/certbot
    depends_on:
      - nextjs
      - phpmyadmin
      - rabin-voice
    deploy:
      resources:
        limits:
          memory: 128M
        reservations:
          memory: 64M
    networks:
      - crm_network

volumes:
  mysql_data:
    driver: local

networks:
  crm_network:
    driver: bridge